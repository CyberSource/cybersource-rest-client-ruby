=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.38
=end

require 'spec_helper'
require 'json'

# Unit tests for CyberSource::TokenizedCardApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TokenizedCardApi' do
  before do
    # run before each test
    @instance = CyberSource::TokenizedCardApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TokenizedCardApi' do
    it 'should create an instance of TokenizedCardApi' do
      expect(@instance).to be_instance_of(CyberSource::TokenizedCardApi)
    end
  end

  # unit tests for delete_tokenized_card
  # Delete a Tokenized Card
  # |  |  |  | | --- | --- | --- | | The Network Token will attempt to be deleted from the card association and if successful the corresponding TMS Network Token will be deleted. 
  # @param tokenized_card_id The Id of a tokenized card.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :profile_id The Id of a profile containing user specific TMS configuration.
  # @return [nil]
  describe 'delete_tokenized_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tokenized_card
  # Retrieve a Tokenized Card
  # |  |  |  | | --- | --- | --- | |**Tokenized Cards**&lt;br&gt;A Tokenized Card represents a network token. Network tokens perform better than regular card numbers and they are not necessarily invalidated when a cardholder loses their card, or it expires.  
  # @param tokenized_card_id The Id of a tokenized card.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :profile_id The Id of a profile containing user specific TMS configuration.
  # @return [TokenizedcardRequest]
  describe 'get_tokenized_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_tokenized_card
  # Create a Tokenized Card
  # |  |  |  | | --- | --- | --- | |**Tokenized cards**&lt;br&gt;A Tokenized card represents a network token. Network tokens perform better than regular card numbers and they are not necessarily invalidated when a cardholder loses their card, or it expires. 
  # @param tokenizedcard_request 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :profile_id The Id of a profile containing user specific TMS configuration.
  # @return [TokenizedcardRequest]
  describe 'post_tokenized_card test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
