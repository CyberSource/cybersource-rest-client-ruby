=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.38
=end

require 'spec_helper'
require 'json'

# Unit tests for CyberSource::TransactionBatchesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TransactionBatchesApi' do
  before do
    # run before each test
    @instance = CyberSource::TransactionBatchesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TransactionBatchesApi' do
    it 'should create an instance of TransactionBatchesApi' do
      expect(@instance).to be_instance_of(CyberSource::TransactionBatchesApi)
    end
  end

  # unit tests for get_transaction_batch_details
  # Get Transaction Details for a given Batch Id
  # Provides real-time detailed status information about the transactions that you previously uploaded in the Business Center or processed with the Offline Transaction File Submission service. 
  # @param id The batch id assigned for the template.
  # @param [Hash] opts the optional parameters
  # @option opts [Date] :upload_date Date in which the original batch file was uploaded. Date must be in ISO-8601 format. Please refer the following link to know more about ISO 8601 format.[Rfc Date Format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14) **Example date format:**  - yyyy-MM-dd 
  # @option opts [String] :status Allows you to filter by rejected response.  Valid values: - Rejected 
  # @return [nil]
  describe 'get_transaction_batch_details test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_transaction_batch_id
  # Get Individual Batch File
  # This API provides details like upload date, completion date, transaction count and accepted and rejected transaction count of the individual batch file using the batch id
  # @param id The batch id assigned for the template.
  # @param [Hash] opts the optional parameters
  # @return [PtsV1TransactionBatchesIdGet200Response]
  describe 'get_transaction_batch_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_transaction_batches
  # Get a List of Batch Files
  # Provide the date and time search range to get a list of Batch Files ready for settlement
  # @param start_time Valid report Start Time in **ISO 8601 format** Please refer the following link to know more about ISO 8601 format.[Rfc Date Format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)   **Example date format:**   - yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZZ 
  # @param end_time Valid report End Time in **ISO 8601 format** Please refer the following link to know more about ISO 8601 format.[Rfc Date Format](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)   **Example date format:**   - yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZZ 
  # @param [Hash] opts the optional parameters
  # @return [PtsV1TransactionBatchesGet200Response]
  describe 'get_transaction_batches test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_transaction_batch
  # Upload a Batch File
  # This endpoint enables the upload of a batch file containing transactions for processing.
  # @param file The file to upload.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'upload_transaction_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
