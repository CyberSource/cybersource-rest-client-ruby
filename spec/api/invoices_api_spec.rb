=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for CyberSource::InvoicesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'InvoicesApi' do
  before do
    # run before each test
    @instance = CyberSource::InvoicesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of InvoicesApi' do
    it 'should create an instance of InvoicesApi' do
      expect(@instance).to be_instance_of(CyberSource::InvoicesApi)
    end
  end

  # unit tests for create_invoice
  # Create a New Invoice
  # The invoicing product enables you to bill any customer with an email address and accept digital payments securely from any connected device. You can either use the system generated email or use the invoice payment link in your own communication. You can add discounts and taxes for the entire invoice or for each line item. To customize the invoice to match your brand see [Invoice Settings](https://developer.cybersource.com/api-reference-assets/index.html#invoicing_invoice-settings_update-invoice-settings). The invoice payment page uses Unified Checkout to process the payments.
  # @param create_invoice_request 
  # @param [Hash] opts the optional parameters
  # @return [InvoicingV2InvoicesPost201Response]
  describe 'create_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_invoices
  # Get a List of Invoices
  # Provides a (filtered) list of invoices that have been created in your account. You can filter the list based on Invoice Status by setting the status query parameter to one of DRAFT, CREATED, SENT, PARTIAL, PAID or CANCELED.
  # @param offset Page offset number.
  # @param limit Maximum number of items you would like returned.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status The status of the invoice.  Possible values:   - DRAFT   - CREATED   - SENT   - PARTIAL   - PAID   - CANCELED 
  # @return [InvoicingV2InvoicesAllGet200Response]
  describe 'get_all_invoices test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_invoice
  # Get Invoice Details
  # You can retrieve details of a specific invoice. This can be used to check the Invoice status and get a list of invoice payments in the invoice history section of the response. For each payment transaction you can use the Transaction Details API to get more details on the payment transaction.
  # @param id The invoice number.
  # @param [Hash] opts the optional parameters
  # @return [InvoicingV2InvoicesGet200Response]
  describe 'get_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for perform_cancel_action
  # Cancel an Invoice
  # You can cancel an invoice if no payment is made to it. You cannot cancel partially or fully paid invoices.
  # @param id The invoice number.
  # @param [Hash] opts the optional parameters
  # @return [InvoicingV2InvoicesPost201Response]
  describe 'perform_cancel_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for perform_send_action
  # Send an Invoice
  # You can send an invoice in draft or created state or resend a sent or partially paid invoice. Fully paid or canceled invoices cannot be resent.
  # @param id The invoice number.
  # @param [Hash] opts the optional parameters
  # @return [InvoicingV2InvoicesPost201Response]
  describe 'perform_send_action test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_invoice
  # Update an Invoice
  # You can update all information except the invoice number till any payment is received for an invoice. Invoices that are partially or fully paid or cancelled cannot be updated.
  # @param id The invoice number.
  # @param update_invoice_request Updating the invoice does not resend the invoice automatically. You must resend the invoice separately.
  # @param [Hash] opts the optional parameters
  # @return [InvoicingV2InvoicesPost201Response]
  describe 'update_invoice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
