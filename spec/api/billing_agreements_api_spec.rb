=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for CyberSource::BillingAgreementsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BillingAgreementsApi' do
  before do
    # run before each test
    @instance = CyberSource::BillingAgreementsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BillingAgreementsApi' do
    it 'should create an instance of BillingAgreementsApi' do
      expect(@instance).to be_instance_of(CyberSource::BillingAgreementsApi)
    end
  end

  # unit tests for billing_agreements_de_registration
  # Standing Instruction Cancellation or Modification
  # Standing Instruction with or without Token
  # @param modify_billing_agreement 
  # @param id ID for de-registration or cancellation of Billing Agreement
  # @param [Hash] opts the optional parameters
  # @return [PtsV2CreditsPost201Response1]
  describe 'billing_agreements_de_registration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for billing_agreements_intimation
  # Standing Instruction intimation
  # Standing Instruction with or without Token.
  # @param intimate_billing_agreement 
  # @param id ID for intimation of Billing Agreement
  # @param [Hash] opts the optional parameters
  # @return [PtsV2CreditsPost201Response1]
  describe 'billing_agreements_intimation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for billing_agreements_registration
  # Standing Instruction completion registration
  # Standing Instruction with or without Token. Transaction amount in case First payment is coming along with registration. Only 2 decimal places allowed
  # @param create_billing_agreement 
  # @param [Hash] opts the optional parameters
  # @return [PtsV2CreditsPost201Response1]
  describe 'billing_agreements_registration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
