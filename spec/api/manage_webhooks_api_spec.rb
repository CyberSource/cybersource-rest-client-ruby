=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.38
=end

require 'spec_helper'
require 'json'

# Unit tests for CyberSource::ManageWebhooksApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ManageWebhooksApi' do
  before do
    # run before each test
    @instance = CyberSource::ManageWebhooksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ManageWebhooksApi' do
    it 'should create an instance of ManageWebhooksApi' do
      expect(@instance).to be_instance_of(CyberSource::ManageWebhooksApi)
    end
  end

  # unit tests for notification_subscriptions_v1_webhooks_webhook_id_post
  # Test a Webhook Configuration
  # Test the webhook configuration by sending a sample webhook. Calling this endpoint sends a sample webhook to the endpoint identified in the user&#39;s subscription.   It will contain sample values for the product &amp; eventType based on values present in your subscription along with a sample message in the payload.   Based on the webhook response users can make any necessary modifications or rest assured knowing their setup is configured correctly. 
  # @param webhook_id The Webhook Identifier.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2014]
  describe 'notification_subscriptions_v1_webhooks_webhook_id_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_asym_egress_key
  # Message Level Encryption
  # Store and manage certificates that will be used to preform Message Level Encryption (MLE). Each new webhook will need its own unique asymmetric certificate. You can either use a digital certificate issued/signed by a CA or self-sign your own using the documentation available on the Developer Guide. 
  # @param v_c_sender_organization_id Sender organization id
  # @param v_c_permissions Encoded user permissions returned by the CGK, for the entity user who initiated the boarding
  # @param save_asym_egress_key Provide egress Asymmetric key information to save (create or store)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :v_c_correlation_id A globally unique id associated with your request
  # @return [InlineResponse2015]
  describe 'save_asym_egress_key test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
