=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for CyberSource::Boardingv1registrationsOrganizationInformationBusinessInformation
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'Boardingv1registrationsOrganizationInformationBusinessInformation' do
  before do
    # run before each test
    @instance = CyberSource::Boardingv1registrationsOrganizationInformationBusinessInformation.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of Boardingv1registrationsOrganizationInformationBusinessInformation' do
    it 'should create an instance of Boardingv1registrationsOrganizationInformationBusinessInformation' do
      expect(@instance).to be_instance_of(CyberSource::Boardingv1registrationsOrganizationInformationBusinessInformation)
    end
  end
  describe 'test attribute "name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "doing_business_as"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "description"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "start_date"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "address"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "time_zone"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Pacific/Pago_Pago", "Pacific/Honolulu", "America/Anchorage", "America/Vancouver", "America/Los_Angeles", "America/Phoenix", "America/Edmonton", "America/Denver", "America/Winnipeg", "America/Mexico_City", "America/Chicago", "America/Bogota", "America/Indianapolis", "America/New_York", "America/La_Paz", "America/Halifax", "America/St_Johns", "America/Buenos_Aires", "America/Godthab", "America/Sao_Paulo", "America/Noronha", "Atlantic/Cape_Verde", "GMT", "Europe/Dublin", "Europe/Lisbon", "Europe/London", "Africa/Tunis", "Europe/Vienna", "Europe/Brussels", "Europe/Zurich", "Europe/Prague", "Europe/Berlin", "Europe/Copenhagen", "Europe/Madrid", "Europe/Budapest", "Europe/Rome", "Africa/Tripoli", "Europe/Monaco", "Europe/Malta", "Europe/Amsterdam", "Europe/Oslo", "Europe/Warsaw", "Europe/Stockholm", "Europe/Belgrade", "Europe/Paris", "Africa/Johannesburg", "Europe/Minsk", "Africa/Cairo", "Europe/Helsinki", "Europe/Athens", "Asia/Jerusalem", "Europe/Riga", "Europe/Bucharest", "Europe/Istanbul", "Asia/Riyadh", "Europe/Moscow", "Asia/Dubai", "Asia/Baku", "Asia/Tbilisi", "Asia/Calcutta", "Asia/Katmandu", "Asia/Dacca", "Asia/Rangoon", "Asia/Jakarta", "Asia/Saigon", "Asia/Bangkok", "Australia/Perth", "Asia/Hong_Kong", "Asia/Macao", "Asia/Kuala_Lumpur", "Asia/Manila", "Asia/Singapore", "Asia/Taipei", "Asia/Shanghai", "Asia/Seoul", "Asia/Tokyo", "Asia/Yakutsk", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/Lindeman", "Australia/Sydney", "Australia/Lord_Howe", "Australia/Melbourne", "Asia/Magadan", "Pacific/Norfolk", "Pacific/Auckland"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.time_zone = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "website_url"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["PARTNERSHIP", "SOLE_PROPRIETORSHIP", "CORPORATION", "LLC", "NON_PROFIT", "TRUST"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "tax_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "phone_number"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "business_contact"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "technical_contact"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "emergency_contact"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "merchant_category_code"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
