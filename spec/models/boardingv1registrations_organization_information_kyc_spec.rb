=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for CyberSource::Boardingv1registrationsOrganizationInformationKYC
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'Boardingv1registrationsOrganizationInformationKYC' do
  before do
    # run before each test
    @instance = CyberSource::Boardingv1registrationsOrganizationInformationKYC.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of Boardingv1registrationsOrganizationInformationKYC' do
    it 'should create an instance of Boardingv1registrationsOrganizationInformationKYC' do
      expect(@instance).to be_instance_of(CyberSource::Boardingv1registrationsOrganizationInformationKYC)
    end
  end
  describe 'test attribute "when_is_customer_charged"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ONETIMEBEFORE", "ONETIMEAFTER", "OTHER"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.when_is_customer_charged = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "when_is_customer_charged_description"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "offer_subscriptions"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "monthly_subscription_percent"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "quarterly_subscription_percent"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "semi_annual_subscription_percent"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "annual_subscription_percent"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "time_to_product_delivery"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["INSTANT", "UPTO2", "UPTO5", "UPTO10", "GREATERTHAN10"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.time_to_product_delivery = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "estimated_monthly_sales"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "average_order_amount"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "largest_expected_order_amount"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "deposit_bank_account"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
