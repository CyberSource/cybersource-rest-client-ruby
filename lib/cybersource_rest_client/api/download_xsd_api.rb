=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.38
=end

require 'uri'
require 'AuthenticationSDK/util/MLEUtility'
module CyberSource
  class DownloadXSDApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default, config)
      @api_client = api_client
      @api_client.set_configuration(config)
    end
    # Download XSD for Report
    # Used to download XSDs for reports on no-auth.
    #
    # @param report_definition_name_version Name and version of XSD file to download. Some XSDs only have one version. In that case version name is not needed. Some example values are DecisionManagerDetailReport, DecisionManagerTypes
    # @param [Hash] opts the optional parameters
    # @return [nil]
    #
    def get_xsdv2(report_definition_name_version, opts = {})
      data, status_code, headers = get_xsdv2_with_http_info(report_definition_name_version, opts)
      return data, status_code, headers
    end

    # Download XSD for Report
    # Used to download XSDs for reports on no-auth.
    # @param report_definition_name_version Name and version of XSD file to download. Some XSDs only have one version. In that case version name is not needed. Some example values are DecisionManagerDetailReport, DecisionManagerTypes
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def get_xsdv2_with_http_info(report_definition_name_version, opts = {})

      if @api_client.config.debugging
          begin
            raise
                @api_client.config.logger.debug 'Calling API: DownloadXSDApi.get_xsdv2 ...'
            rescue
                puts 'Cannot write to log'
            end
      end
      # verify the required parameter 'report_definition_name_version' is set
      if @api_client.config.client_side_validation && report_definition_name_version.nil?
        fail ArgumentError, "Missing the required parameter 'report_definition_name_version' when calling DownloadXSDApi.get_xsdv2"
      end
      # resource path
      local_var_path = 'reporting/v3/xsds/{reportDefinitionNameVersion}'.sub('{' + 'reportDefinitionNameVersion' + '}', report_definition_name_version.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=utf-8'])

      # form parameters
      form_params = {}

      # http body (model)
      if 'GET' == 'POST'
        post_body = '{}'
      else
        post_body = nil
      end
      inbound_mle_status = "false"      
      if MLEUtility.check_is_mle_for_API(@api_client.merchantconfig, inbound_mle_status, ["get_xsdv2","get_xsdv2_with_http_info"])
        post_body = MLEUtility.encrypt_request_payload(@api_client.merchantconfig, post_body)
      end
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        begin
        raise
            @api_client.config.logger.debug "API called: DownloadXSDApi#get_xsdv2\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
        rescue
            puts 'Cannot write to log'
        end
      end
      return data, status_code, headers
    end
  end
end
