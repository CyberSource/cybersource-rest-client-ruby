=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.38
=end

require 'uri'
require 'AuthenticationSDK/util/MLEUtility'
module CyberSource
  class UserManagementApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default, config)
      @api_client = api_client
      @api_client.set_configuration(config)
    end
    # Get User Information - Deprecated
    # This endpoint is deprecated. Please use the search end point.
    #
    # @param [Hash] opts the optional parameters
    # @option opts [String] :organization_id This is the orgId of the organization which the user belongs to.
    # @option opts [String] :user_name User ID of the user you want to get details on.
    # @option opts [String] :permission_id permission that you are trying to search user on.
    # @option opts [String] :role_id role of the user you are trying to search on.
    # @return [UmsV1UsersGet200Response]
    #
    def get_users(opts = {})
      data, status_code, headers = get_users_with_http_info(opts)
      return data, status_code, headers
    end

    # Get User Information - Deprecated
    # This endpoint is deprecated. Please use the search end point.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :organization_id This is the orgId of the organization which the user belongs to.
    # @option opts [String] :user_name User ID of the user you want to get details on.
    # @option opts [String] :permission_id permission that you are trying to search user on.
    # @option opts [String] :role_id role of the user you are trying to search on.
    # @return [Array<(UmsV1UsersGet200Response, Fixnum, Hash)>] UmsV1UsersGet200Response data, response status code and response headers
    def get_users_with_http_info(opts = {})

      if @api_client.config.debugging
          begin
            raise
                @api_client.config.logger.debug 'Calling API: UserManagementApi.get_users ...'
            rescue
                puts 'Cannot write to log'
            end
      end
      # resource path
      local_var_path = 'ums/v1/users'

      # query parameters
      query_params = {}
      query_params[:'organizationId'] = opts[:'organization_id'] if !opts[:'organization_id'].nil?
      query_params[:'userName'] = opts[:'user_name'] if !opts[:'user_name'].nil?
      query_params[:'permissionId'] = opts[:'permission_id'] if !opts[:'permission_id'].nil?
      query_params[:'roleId'] = opts[:'role_id'] if !opts[:'role_id'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/hal+json;charset=utf-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=utf-8'])

      # form parameters
      form_params = {}

      # http body (model)
      if 'GET' == 'POST'
        post_body = '{}'
      else
        post_body = nil
      end
      is_mle_supported_by_cybs_for_api = false
      if MLEUtility.check_is_mle_for_API(@api_client.merchantconfig, is_mle_supported_by_cybs_for_api, ["get_users","get_users_with_http_info"])
        post_body = MLEUtility.encrypt_request_payload(@api_client.merchantconfig, post_body)
      end
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UmsV1UsersGet200Response')
      if @api_client.config.debugging
        begin
        raise
            @api_client.config.logger.debug "API called: UserManagementApi#get_users\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
        rescue
            puts 'Cannot write to log'
        end
      end
      return data, status_code, headers
    end
  end
end
