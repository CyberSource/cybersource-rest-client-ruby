=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.38
=end

require 'uri'
require 'AuthenticationSDK/util/MLEUtility'
module CyberSource
  class UnifiedCheckoutCaptureContextApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default, config)
      @api_client = api_client
      @api_client.set_configuration(config)
    end
    # Generate Unified Checkout Capture Context
    # Unified Checkout is a powerful product within the Digital Acceptance Suite. Unified Checkout is designed to assist merchants with the adoption and inclusion of digital payments within their payment acceptance page. With Unified Checkout Integration you can add digital payment methods to create familiar, convenient and seamless payment experiences that are designed to reduce checkout friction and increase conversions. Click to Pay Drop-in UI is built on the Unified Checkout platform. For more information about Unified Checkout, see the [Unified Checkout Developer Guides Page](https://developer.cybersource.com/docs/cybs/en-us/unified-checkout/developer/all/rest/unified-checkout/uc-intro.html). For examples on how to integrate Unified Checkout within your webpage please see our [GitHub Unified Checkout Samples](https://github.com/CyberSource/cybersource-unified-checkout-sample-java). Generate Unified Checkout Capture Context Generate a one-time use capture context used for the invocation of Unified Checkout. The Request wil contain all of the parameters for how Unified Checkout will operate within a client webpage. The resulting payload will be a JWT signed object that can be used to initiate Unified Checkout or Click to Pay Drop-in UI within a web page
    #
    # @param generate_unified_checkout_capture_context_request 
    # @param [Hash] opts the optional parameters
    # @return [String]
    #
    def generate_unified_checkout_capture_context(generate_unified_checkout_capture_context_request, opts = {})
      data, status_code, headers = generate_unified_checkout_capture_context_with_http_info(generate_unified_checkout_capture_context_request, opts)
      return data, status_code, headers
    end

    # Generate Unified Checkout Capture Context
    # Unified Checkout is a powerful product within the Digital Acceptance Suite. Unified Checkout is designed to assist merchants with the adoption and inclusion of digital payments within their payment acceptance page. With Unified Checkout Integration you can add digital payment methods to create familiar, convenient and seamless payment experiences that are designed to reduce checkout friction and increase conversions. Click to Pay Drop-in UI is built on the Unified Checkout platform. For more information about Unified Checkout, see the [Unified Checkout Developer Guides Page](https://developer.cybersource.com/docs/cybs/en-us/unified-checkout/developer/all/rest/unified-checkout/uc-intro.html). For examples on how to integrate Unified Checkout within your webpage please see our [GitHub Unified Checkout Samples](https://github.com/CyberSource/cybersource-unified-checkout-sample-java). Generate Unified Checkout Capture Context Generate a one-time use capture context used for the invocation of Unified Checkout. The Request wil contain all of the parameters for how Unified Checkout will operate within a client webpage. The resulting payload will be a JWT signed object that can be used to initiate Unified Checkout or Click to Pay Drop-in UI within a web page
    # @param generate_unified_checkout_capture_context_request 
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def generate_unified_checkout_capture_context_with_http_info(generate_unified_checkout_capture_context_request, opts = {})

      if @api_client.config.debugging
          begin
            raise
                @api_client.config.logger.debug 'Calling API: UnifiedCheckoutCaptureContextApi.generate_unified_checkout_capture_context ...'
            rescue
                puts 'Cannot write to log'
            end
      end
      # verify the required parameter 'generate_unified_checkout_capture_context_request' is set
      if @api_client.config.client_side_validation && generate_unified_checkout_capture_context_request.nil?
        fail ArgumentError, "Missing the required parameter 'generate_unified_checkout_capture_context_request' when calling UnifiedCheckoutCaptureContextApi.generate_unified_checkout_capture_context"
      end
      # resource path
      local_var_path = 'up/v1/capture-contexts'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/jwt'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=utf-8'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(generate_unified_checkout_capture_context_request)
      sdk_tracker = SdkTracker.new
      post_body = sdk_tracker.insert_developer_id_tracker(post_body, 'GenerateUnifiedCheckoutCaptureContextRequest', @api_client.config.host, @api_client.merchantconfig.defaultDeveloperId)
      is_mle_supported_by_cybs_for_api = false
      if MLEUtility.check_is_mle_for_API(@api_client.merchantconfig, is_mle_supported_by_cybs_for_api, ["generate_unified_checkout_capture_context","generate_unified_checkout_capture_context_with_http_info"])
        post_body = MLEUtility.encrypt_request_payload(@api_client.merchantconfig, post_body)
      end
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        begin
        raise
            @api_client.config.logger.debug "API called: UnifiedCheckoutCaptureContextApi#generate_unified_checkout_capture_context\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
        rescue
            puts 'Cannot write to log'
        end
      end
      return data, status_code, headers
    end
  end
end
