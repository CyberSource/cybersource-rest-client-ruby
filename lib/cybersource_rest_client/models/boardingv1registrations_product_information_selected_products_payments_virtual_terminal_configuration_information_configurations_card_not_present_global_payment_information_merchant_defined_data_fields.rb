=begin
#CyberSource Merged Spec

#All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

OpenAPI spec version: 0.0.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'date'

module CyberSource
  class Boardingv1registrationsProductInformationSelectedProductsPaymentsVirtualTerminalConfigurationInformationConfigurationsCardNotPresentGlobalPaymentInformationMerchantDefinedDataFields
    attr_accessor :display_merchant_defined_data1

    attr_accessor :display_merchant_defined_data2

    attr_accessor :display_merchant_defined_data3

    attr_accessor :display_merchant_defined_data4

    attr_accessor :display_merchant_defined_data5

    attr_accessor :merchant_defined_data1_default_value

    attr_accessor :merchant_defined_data1_label

    attr_accessor :require_merchant_defined_data1

    attr_accessor :merchant_defined_data2_default_value

    attr_accessor :merchant_defined_data2_label

    attr_accessor :require_merchant_defined_data2

    attr_accessor :merchant_defined_data3_default_value

    attr_accessor :merchant_defined_data3_label

    attr_accessor :require_merchant_defined_data3

    attr_accessor :merchant_defined_data4_default_value

    attr_accessor :merchant_defined_data4_label

    attr_accessor :require_merchant_defined_data4

    attr_accessor :merchant_defined_data5_default_value

    attr_accessor :merchant_defined_data5_label

    attr_accessor :require_merchant_defined_data5

    attr_accessor :merchant_defined_data1_display_on_receipt

    attr_accessor :merchant_defined_data2_display_on_receipt

    attr_accessor :merchant_defined_data3_display_on_receipt

    attr_accessor :merchant_defined_data4_display_on_receipt

    attr_accessor :merchant_defined_data5_display_on_receipt

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'display_merchant_defined_data1' => :'displayMerchantDefinedData1',
        :'display_merchant_defined_data2' => :'displayMerchantDefinedData2',
        :'display_merchant_defined_data3' => :'displayMerchantDefinedData3',
        :'display_merchant_defined_data4' => :'displayMerchantDefinedData4',
        :'display_merchant_defined_data5' => :'displayMerchantDefinedData5',
        :'merchant_defined_data1_default_value' => :'merchantDefinedData1DefaultValue',
        :'merchant_defined_data1_label' => :'merchantDefinedData1Label',
        :'require_merchant_defined_data1' => :'requireMerchantDefinedData1',
        :'merchant_defined_data2_default_value' => :'merchantDefinedData2DefaultValue',
        :'merchant_defined_data2_label' => :'merchantDefinedData2Label',
        :'require_merchant_defined_data2' => :'requireMerchantDefinedData2',
        :'merchant_defined_data3_default_value' => :'merchantDefinedData3DefaultValue',
        :'merchant_defined_data3_label' => :'merchantDefinedData3Label',
        :'require_merchant_defined_data3' => :'requireMerchantDefinedData3',
        :'merchant_defined_data4_default_value' => :'merchantDefinedData4DefaultValue',
        :'merchant_defined_data4_label' => :'merchantDefinedData4Label',
        :'require_merchant_defined_data4' => :'requireMerchantDefinedData4',
        :'merchant_defined_data5_default_value' => :'merchantDefinedData5DefaultValue',
        :'merchant_defined_data5_label' => :'merchantDefinedData5Label',
        :'require_merchant_defined_data5' => :'requireMerchantDefinedData5',
        :'merchant_defined_data1_display_on_receipt' => :'merchantDefinedData1DisplayOnReceipt',
        :'merchant_defined_data2_display_on_receipt' => :'merchantDefinedData2DisplayOnReceipt',
        :'merchant_defined_data3_display_on_receipt' => :'merchantDefinedData3DisplayOnReceipt',
        :'merchant_defined_data4_display_on_receipt' => :'merchantDefinedData4DisplayOnReceipt',
        :'merchant_defined_data5_display_on_receipt' => :'merchantDefinedData5DisplayOnReceipt'
      }
    end

    # Attribute mapping from JSON key to ruby-style variable name.
    def self.json_map
      {
        :'display_merchant_defined_data1' => :'display_merchant_defined_data1',
        :'display_merchant_defined_data2' => :'display_merchant_defined_data2',
        :'display_merchant_defined_data3' => :'display_merchant_defined_data3',
        :'display_merchant_defined_data4' => :'display_merchant_defined_data4',
        :'display_merchant_defined_data5' => :'display_merchant_defined_data5',
        :'merchant_defined_data1_default_value' => :'merchant_defined_data1_default_value',
        :'merchant_defined_data1_label' => :'merchant_defined_data1_label',
        :'require_merchant_defined_data1' => :'require_merchant_defined_data1',
        :'merchant_defined_data2_default_value' => :'merchant_defined_data2_default_value',
        :'merchant_defined_data2_label' => :'merchant_defined_data2_label',
        :'require_merchant_defined_data2' => :'require_merchant_defined_data2',
        :'merchant_defined_data3_default_value' => :'merchant_defined_data3_default_value',
        :'merchant_defined_data3_label' => :'merchant_defined_data3_label',
        :'require_merchant_defined_data3' => :'require_merchant_defined_data3',
        :'merchant_defined_data4_default_value' => :'merchant_defined_data4_default_value',
        :'merchant_defined_data4_label' => :'merchant_defined_data4_label',
        :'require_merchant_defined_data4' => :'require_merchant_defined_data4',
        :'merchant_defined_data5_default_value' => :'merchant_defined_data5_default_value',
        :'merchant_defined_data5_label' => :'merchant_defined_data5_label',
        :'require_merchant_defined_data5' => :'require_merchant_defined_data5',
        :'merchant_defined_data1_display_on_receipt' => :'merchant_defined_data1_display_on_receipt',
        :'merchant_defined_data2_display_on_receipt' => :'merchant_defined_data2_display_on_receipt',
        :'merchant_defined_data3_display_on_receipt' => :'merchant_defined_data3_display_on_receipt',
        :'merchant_defined_data4_display_on_receipt' => :'merchant_defined_data4_display_on_receipt',
        :'merchant_defined_data5_display_on_receipt' => :'merchant_defined_data5_display_on_receipt'
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        :'display_merchant_defined_data1' => :'BOOLEAN',
        :'display_merchant_defined_data2' => :'BOOLEAN',
        :'display_merchant_defined_data3' => :'BOOLEAN',
        :'display_merchant_defined_data4' => :'BOOLEAN',
        :'display_merchant_defined_data5' => :'BOOLEAN',
        :'merchant_defined_data1_default_value' => :'String',
        :'merchant_defined_data1_label' => :'String',
        :'require_merchant_defined_data1' => :'BOOLEAN',
        :'merchant_defined_data2_default_value' => :'String',
        :'merchant_defined_data2_label' => :'String',
        :'require_merchant_defined_data2' => :'BOOLEAN',
        :'merchant_defined_data3_default_value' => :'String',
        :'merchant_defined_data3_label' => :'String',
        :'require_merchant_defined_data3' => :'BOOLEAN',
        :'merchant_defined_data4_default_value' => :'String',
        :'merchant_defined_data4_label' => :'String',
        :'require_merchant_defined_data4' => :'BOOLEAN',
        :'merchant_defined_data5_default_value' => :'String',
        :'merchant_defined_data5_label' => :'String',
        :'require_merchant_defined_data5' => :'BOOLEAN',
        :'merchant_defined_data1_display_on_receipt' => :'BOOLEAN',
        :'merchant_defined_data2_display_on_receipt' => :'BOOLEAN',
        :'merchant_defined_data3_display_on_receipt' => :'BOOLEAN',
        :'merchant_defined_data4_display_on_receipt' => :'BOOLEAN',
        :'merchant_defined_data5_display_on_receipt' => :'BOOLEAN'
      }
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      if attributes.has_key?(:'displayMerchantDefinedData1')
        self.display_merchant_defined_data1 = attributes[:'displayMerchantDefinedData1']
      end

      if attributes.has_key?(:'displayMerchantDefinedData2')
        self.display_merchant_defined_data2 = attributes[:'displayMerchantDefinedData2']
      end

      if attributes.has_key?(:'displayMerchantDefinedData3')
        self.display_merchant_defined_data3 = attributes[:'displayMerchantDefinedData3']
      end

      if attributes.has_key?(:'displayMerchantDefinedData4')
        self.display_merchant_defined_data4 = attributes[:'displayMerchantDefinedData4']
      end

      if attributes.has_key?(:'displayMerchantDefinedData5')
        self.display_merchant_defined_data5 = attributes[:'displayMerchantDefinedData5']
      end

      if attributes.has_key?(:'merchantDefinedData1DefaultValue')
        self.merchant_defined_data1_default_value = attributes[:'merchantDefinedData1DefaultValue']
      end

      if attributes.has_key?(:'merchantDefinedData1Label')
        self.merchant_defined_data1_label = attributes[:'merchantDefinedData1Label']
      end

      if attributes.has_key?(:'requireMerchantDefinedData1')
        self.require_merchant_defined_data1 = attributes[:'requireMerchantDefinedData1']
      end

      if attributes.has_key?(:'merchantDefinedData2DefaultValue')
        self.merchant_defined_data2_default_value = attributes[:'merchantDefinedData2DefaultValue']
      end

      if attributes.has_key?(:'merchantDefinedData2Label')
        self.merchant_defined_data2_label = attributes[:'merchantDefinedData2Label']
      end

      if attributes.has_key?(:'requireMerchantDefinedData2')
        self.require_merchant_defined_data2 = attributes[:'requireMerchantDefinedData2']
      end

      if attributes.has_key?(:'merchantDefinedData3DefaultValue')
        self.merchant_defined_data3_default_value = attributes[:'merchantDefinedData3DefaultValue']
      end

      if attributes.has_key?(:'merchantDefinedData3Label')
        self.merchant_defined_data3_label = attributes[:'merchantDefinedData3Label']
      end

      if attributes.has_key?(:'requireMerchantDefinedData3')
        self.require_merchant_defined_data3 = attributes[:'requireMerchantDefinedData3']
      end

      if attributes.has_key?(:'merchantDefinedData4DefaultValue')
        self.merchant_defined_data4_default_value = attributes[:'merchantDefinedData4DefaultValue']
      end

      if attributes.has_key?(:'merchantDefinedData4Label')
        self.merchant_defined_data4_label = attributes[:'merchantDefinedData4Label']
      end

      if attributes.has_key?(:'requireMerchantDefinedData4')
        self.require_merchant_defined_data4 = attributes[:'requireMerchantDefinedData4']
      end

      if attributes.has_key?(:'merchantDefinedData5DefaultValue')
        self.merchant_defined_data5_default_value = attributes[:'merchantDefinedData5DefaultValue']
      end

      if attributes.has_key?(:'merchantDefinedData5Label')
        self.merchant_defined_data5_label = attributes[:'merchantDefinedData5Label']
      end

      if attributes.has_key?(:'requireMerchantDefinedData5')
        self.require_merchant_defined_data5 = attributes[:'requireMerchantDefinedData5']
      end

      if attributes.has_key?(:'merchantDefinedData1DisplayOnReceipt')
        self.merchant_defined_data1_display_on_receipt = attributes[:'merchantDefinedData1DisplayOnReceipt']
      end

      if attributes.has_key?(:'merchantDefinedData2DisplayOnReceipt')
        self.merchant_defined_data2_display_on_receipt = attributes[:'merchantDefinedData2DisplayOnReceipt']
      end

      if attributes.has_key?(:'merchantDefinedData3DisplayOnReceipt')
        self.merchant_defined_data3_display_on_receipt = attributes[:'merchantDefinedData3DisplayOnReceipt']
      end

      if attributes.has_key?(:'merchantDefinedData4DisplayOnReceipt')
        self.merchant_defined_data4_display_on_receipt = attributes[:'merchantDefinedData4DisplayOnReceipt']
      end

      if attributes.has_key?(:'merchantDefinedData5DisplayOnReceipt')
        self.merchant_defined_data5_display_on_receipt = attributes[:'merchantDefinedData5DisplayOnReceipt']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          display_merchant_defined_data1 == o.display_merchant_defined_data1 &&
          display_merchant_defined_data2 == o.display_merchant_defined_data2 &&
          display_merchant_defined_data3 == o.display_merchant_defined_data3 &&
          display_merchant_defined_data4 == o.display_merchant_defined_data4 &&
          display_merchant_defined_data5 == o.display_merchant_defined_data5 &&
          merchant_defined_data1_default_value == o.merchant_defined_data1_default_value &&
          merchant_defined_data1_label == o.merchant_defined_data1_label &&
          require_merchant_defined_data1 == o.require_merchant_defined_data1 &&
          merchant_defined_data2_default_value == o.merchant_defined_data2_default_value &&
          merchant_defined_data2_label == o.merchant_defined_data2_label &&
          require_merchant_defined_data2 == o.require_merchant_defined_data2 &&
          merchant_defined_data3_default_value == o.merchant_defined_data3_default_value &&
          merchant_defined_data3_label == o.merchant_defined_data3_label &&
          require_merchant_defined_data3 == o.require_merchant_defined_data3 &&
          merchant_defined_data4_default_value == o.merchant_defined_data4_default_value &&
          merchant_defined_data4_label == o.merchant_defined_data4_label &&
          require_merchant_defined_data4 == o.require_merchant_defined_data4 &&
          merchant_defined_data5_default_value == o.merchant_defined_data5_default_value &&
          merchant_defined_data5_label == o.merchant_defined_data5_label &&
          require_merchant_defined_data5 == o.require_merchant_defined_data5 &&
          merchant_defined_data1_display_on_receipt == o.merchant_defined_data1_display_on_receipt &&
          merchant_defined_data2_display_on_receipt == o.merchant_defined_data2_display_on_receipt &&
          merchant_defined_data3_display_on_receipt == o.merchant_defined_data3_display_on_receipt &&
          merchant_defined_data4_display_on_receipt == o.merchant_defined_data4_display_on_receipt &&
          merchant_defined_data5_display_on_receipt == o.merchant_defined_data5_display_on_receipt
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [display_merchant_defined_data1, display_merchant_defined_data2, display_merchant_defined_data3, display_merchant_defined_data4, display_merchant_defined_data5, merchant_defined_data1_default_value, merchant_defined_data1_label, require_merchant_defined_data1, merchant_defined_data2_default_value, merchant_defined_data2_label, require_merchant_defined_data2, merchant_defined_data3_default_value, merchant_defined_data3_label, require_merchant_defined_data3, merchant_defined_data4_default_value, merchant_defined_data4_label, require_merchant_defined_data4, merchant_defined_data5_default_value, merchant_defined_data5_label, require_merchant_defined_data5, merchant_defined_data1_display_on_receipt, merchant_defined_data2_display_on_receipt, merchant_defined_data3_display_on_receipt, merchant_defined_data4_display_on_receipt, merchant_defined_data5_display_on_receipt].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.swagger_types.each_pair do |key, type|
        if type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{self.class.json_map[key]}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{self.class.json_map[key]}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :DateTime
        DateTime.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :BOOLEAN
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        temp_model = CyberSource.const_get(type).new
        temp_model.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        next if value.nil?
        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
